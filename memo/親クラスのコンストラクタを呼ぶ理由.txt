✅ 親クラスのコンストラクタ(初期化メソッド)を呼ぶ理由まとめ：
・親クラスのインスタンス変数を初期化するため。
例えば、nameやageをPersonクラス内でセットしているなら、それを子クラスでも使えるようにするため。
・親クラス側の初期化ロジックも反映させたいから。
親クラスが何か特別な設置やバリデーションをしている可能性があるから。
それを、スキップしてしまうと、親の「設計思想」に反する状態で子クラスが動いてしまう可能性があるから。


✅ super().__init__(name, age) は何をしているのか？
1.子クラス Student の __init__() が呼ばれる。
2.その中で super() を使って親クラス Person の __init__() を呼び出す。
3.親クラス側では self.name や self.age を設定する処理が行われる。

つまり、「自分で self.name = name を書いたのと同じ結果になる」けど、それは親クラスに任せてるってことなんです

🤖 たとえば…もし親クラスがこうなっていたら：
class Person:
    def __init__(self, name, age):
        self.name = name.capitalize()
        self.age = max(age, 0)

みたいな処理がされるなら、自分で self.name = name って書いちゃうとこうしたロジックがスルーされてしまうんですよね。
だから super().__init__(...) を使うことで、
・親クラスの知見（ロジック）をちゃんと取り込む

